// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v5.26.1
// source: excel_table.proto

package excel_table

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TopCadetsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	File    []byte `protobuf:"bytes,2,opt,name=file,proto3" json:"file,omitempty"`
}

func (x *TopCadetsResponse) Reset() {
	*x = TopCadetsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_excel_table_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopCadetsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopCadetsResponse) ProtoMessage() {}

func (x *TopCadetsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_excel_table_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopCadetsResponse.ProtoReflect.Descriptor instead.
func (*TopCadetsResponse) Descriptor() ([]byte, []int) {
	return file_excel_table_proto_rawDescGZIP(), []int{0}
}

func (x *TopCadetsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *TopCadetsResponse) GetFile() []byte {
	if x != nil {
		return x.File
	}
	return nil
}

type TopCadetsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Period string       `protobuf:"bytes,1,opt,name=period,proto3" json:"period,omitempty"`
	Cadets []*CadetData `protobuf:"bytes,2,rep,name=cadets,proto3" json:"cadets,omitempty"`
}

func (x *TopCadetsRequest) Reset() {
	*x = TopCadetsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_excel_table_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopCadetsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopCadetsRequest) ProtoMessage() {}

func (x *TopCadetsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_excel_table_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopCadetsRequest.ProtoReflect.Descriptor instead.
func (*TopCadetsRequest) Descriptor() ([]byte, []int) {
	return file_excel_table_proto_rawDescGZIP(), []int{1}
}

func (x *TopCadetsRequest) GetPeriod() string {
	if x != nil {
		return x.Period
	}
	return ""
}

func (x *TopCadetsRequest) GetCadets() []*CadetData {
	if x != nil {
		return x.Cadets
	}
	return nil
}

type CadetData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Personal *Personal             `protobuf:"bytes,1,opt,name=personal,proto3" json:"personal,omitempty"`
	Hours    *Hours                `protobuf:"bytes,2,opt,name=hours,proto3" json:"hours,omitempty"`
	Journey  map[string]*EventList `protobuf:"bytes,3,rep,name=journey,proto3" json:"journey,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *CadetData) Reset() {
	*x = CadetData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_excel_table_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CadetData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CadetData) ProtoMessage() {}

func (x *CadetData) ProtoReflect() protoreflect.Message {
	mi := &file_excel_table_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CadetData.ProtoReflect.Descriptor instead.
func (*CadetData) Descriptor() ([]byte, []int) {
	return file_excel_table_proto_rawDescGZIP(), []int{2}
}

func (x *CadetData) GetPersonal() *Personal {
	if x != nil {
		return x.Personal
	}
	return nil
}

func (x *CadetData) GetHours() *Hours {
	if x != nil {
		return x.Hours
	}
	return nil
}

func (x *CadetData) GetJourney() map[string]*EventList {
	if x != nil {
		return x.Journey
	}
	return nil
}

type Personal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int32      `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Login     string     `protobuf:"bytes,2,opt,name=login,proto3" json:"login,omitempty"`
	FullName  string     `protobuf:"bytes,3,opt,name=full_name,json=fullName,proto3" json:"full_name,omitempty"`
	Age       int32      `protobuf:"varint,4,opt,name=age,proto3" json:"age,omitempty"`
	Gender    string     `protobuf:"bytes,5,opt,name=gender,proto3" json:"gender,omitempty"`
	Admission *Admission `protobuf:"bytes,6,opt,name=admission,proto3" json:"admission,omitempty"`
	Level     int32      `protobuf:"varint,7,opt,name=level,proto3" json:"level,omitempty"`
	XpTotal   int32      `protobuf:"varint,8,opt,name=xp_total,json=xpTotal,proto3" json:"xp_total,omitempty"`
}

func (x *Personal) Reset() {
	*x = Personal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_excel_table_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Personal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Personal) ProtoMessage() {}

func (x *Personal) ProtoReflect() protoreflect.Message {
	mi := &file_excel_table_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Personal.ProtoReflect.Descriptor instead.
func (*Personal) Descriptor() ([]byte, []int) {
	return file_excel_table_proto_rawDescGZIP(), []int{3}
}

func (x *Personal) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Personal) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

func (x *Personal) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

func (x *Personal) GetAge() int32 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *Personal) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *Personal) GetAdmission() *Admission {
	if x != nil {
		return x.Admission
	}
	return nil
}

func (x *Personal) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *Personal) GetXpTotal() int32 {
	if x != nil {
		return x.XpTotal
	}
	return 0
}

type Admission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Color string `protobuf:"bytes,2,opt,name=color,proto3" json:"color,omitempty"`
}

func (x *Admission) Reset() {
	*x = Admission{}
	if protoimpl.UnsafeEnabled {
		mi := &file_excel_table_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Admission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Admission) ProtoMessage() {}

func (x *Admission) ProtoReflect() protoreflect.Message {
	mi := &file_excel_table_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Admission.ProtoReflect.Descriptor instead.
func (*Admission) Descriptor() ([]byte, []int) {
	return file_excel_table_proto_rawDescGZIP(), []int{4}
}

func (x *Admission) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Admission) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

type EventList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Events []*Event `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *EventList) Reset() {
	*x = EventList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_excel_table_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventList) ProtoMessage() {}

func (x *EventList) ProtoReflect() protoreflect.Message {
	mi := &file_excel_table_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventList.ProtoReflect.Descriptor instead.
func (*EventList) Descriptor() ([]byte, []int) {
	return file_excel_table_proto_rawDescGZIP(), []int{5}
}

func (x *EventList) GetEvents() []*Event {
	if x != nil {
		return x.Events
	}
	return nil
}

type Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XpTotal   int32                  `protobuf:"varint,3,opt,name=xp_total,json=xpTotal,proto3" json:"xp_total,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Languages []*Language            `protobuf:"bytes,5,rep,name=languages,proto3" json:"languages,omitempty"`
}

func (x *Event) Reset() {
	*x = Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_excel_table_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_excel_table_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_excel_table_proto_rawDescGZIP(), []int{6}
}

func (x *Event) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Event) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Event) GetXpTotal() int32 {
	if x != nil {
		return x.XpTotal
	}
	return 0
}

func (x *Event) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Event) GetLanguages() []*Language {
	if x != nil {
		return x.Languages
	}
	return nil
}

type Language struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Tasks []*Task `protobuf:"bytes,2,rep,name=tasks,proto3" json:"tasks,omitempty"`
}

func (x *Language) Reset() {
	*x = Language{}
	if protoimpl.UnsafeEnabled {
		mi := &file_excel_table_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Language) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Language) ProtoMessage() {}

func (x *Language) ProtoReflect() protoreflect.Message {
	mi := &file_excel_table_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Language.ProtoReflect.Descriptor instead.
func (*Language) Descriptor() ([]byte, []int) {
	return file_excel_table_proto_rawDescGZIP(), []int{7}
}

func (x *Language) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Language) GetTasks() []*Task {
	if x != nil {
		return x.Tasks
	}
	return nil
}

type Task struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Xp   int32  `protobuf:"varint,3,opt,name=xp,proto3" json:"xp,omitempty"`
}

func (x *Task) Reset() {
	*x = Task{}
	if protoimpl.UnsafeEnabled {
		mi := &file_excel_table_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task) ProtoMessage() {}

func (x *Task) ProtoReflect() protoreflect.Message {
	mi := &file_excel_table_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task.ProtoReflect.Descriptor instead.
func (*Task) Descriptor() ([]byte, []int) {
	return file_excel_table_proto_rawDescGZIP(), []int{8}
}

func (x *Task) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Task) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Task) GetXp() int32 {
	if x != nil {
		return x.Xp
	}
	return 0
}

type Hours struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int32       `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Month []*MonthStr `protobuf:"bytes,2,rep,name=month,proto3" json:"month,omitempty"`
}

func (x *Hours) Reset() {
	*x = Hours{}
	if protoimpl.UnsafeEnabled {
		mi := &file_excel_table_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Hours) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Hours) ProtoMessage() {}

func (x *Hours) ProtoReflect() protoreflect.Message {
	mi := &file_excel_table_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Hours.ProtoReflect.Descriptor instead.
func (*Hours) Descriptor() ([]byte, []int) {
	return file_excel_table_proto_rawDescGZIP(), []int{9}
}

func (x *Hours) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *Hours) GetMonth() []*MonthStr {
	if x != nil {
		return x.Month
	}
	return nil
}

type MonthStr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Year  string `protobuf:"bytes,1,opt,name=year,proto3" json:"year,omitempty"`
	Month string `protobuf:"bytes,2,opt,name=month,proto3" json:"month,omitempty"`
	Hours int32  `protobuf:"varint,3,opt,name=hours,proto3" json:"hours,omitempty"`
}

func (x *MonthStr) Reset() {
	*x = MonthStr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_excel_table_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MonthStr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonthStr) ProtoMessage() {}

func (x *MonthStr) ProtoReflect() protoreflect.Message {
	mi := &file_excel_table_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonthStr.ProtoReflect.Descriptor instead.
func (*MonthStr) Descriptor() ([]byte, []int) {
	return file_excel_table_proto_rawDescGZIP(), []int{10}
}

func (x *MonthStr) GetYear() string {
	if x != nil {
		return x.Year
	}
	return ""
}

func (x *MonthStr) GetMonth() string {
	if x != nil {
		return x.Month
	}
	return ""
}

func (x *MonthStr) GetHours() int32 {
	if x != nil {
		return x.Hours
	}
	return 0
}

var File_excel_table_proto protoreflect.FileDescriptor

var file_excel_table_proto_rawDesc = []byte{
	0x0a, 0x11, 0x65, 0x78, 0x63, 0x65, 0x6c, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x65, 0x78, 0x63, 0x65, 0x6c, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x41, 0x0a, 0x11, 0x54, 0x6f, 0x70, 0x43, 0x61, 0x64, 0x65, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04,
	0x66, 0x69, 0x6c, 0x65, 0x22, 0x5a, 0x0a, 0x10, 0x54, 0x6f, 0x70, 0x43, 0x61, 0x64, 0x65, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x65, 0x72, 0x69,
	0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64,
	0x12, 0x2e, 0x0a, 0x06, 0x63, 0x61, 0x64, 0x65, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x65, 0x78, 0x63, 0x65, 0x6c, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x43,
	0x61, 0x64, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x63, 0x61, 0x64, 0x65, 0x74, 0x73,
	0x22, 0xfb, 0x01, 0x0a, 0x09, 0x43, 0x61, 0x64, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x31,
	0x0a, 0x08, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x65, 0x78, 0x63, 0x65, 0x6c, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x50,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x52, 0x08, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61,
	0x6c, 0x12, 0x28, 0x0a, 0x05, 0x68, 0x6f, 0x75, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x65, 0x78, 0x63, 0x65, 0x6c, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x48,
	0x6f, 0x75, 0x72, 0x73, 0x52, 0x05, 0x68, 0x6f, 0x75, 0x72, 0x73, 0x12, 0x3d, 0x0a, 0x07, 0x6a,
	0x6f, 0x75, 0x72, 0x6e, 0x65, 0x79, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65,
	0x78, 0x63, 0x65, 0x6c, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x43, 0x61, 0x64, 0x65, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x2e, 0x4a, 0x6f, 0x75, 0x72, 0x6e, 0x65, 0x79, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x07, 0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x65, 0x79, 0x1a, 0x52, 0x0a, 0x0c, 0x4a, 0x6f,
	0x75, 0x72, 0x6e, 0x65, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2c, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x78,
	0x63, 0x65, 0x6c, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xde,
	0x01, 0x0a, 0x08, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c,
	0x6f, 0x67, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x6f, 0x67, 0x69,
	0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x61, 0x67, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x34, 0x0a, 0x09, 0x61, 0x64, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x78,
	0x63, 0x65, 0x6c, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x09, 0x61, 0x64, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x78, 0x70, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x78, 0x70, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22,
	0x35, 0x0a, 0x09, 0x41, 0x64, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x22, 0x37, 0x0a, 0x09, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x78, 0x63, 0x65, 0x6c, 0x5f, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x22,
	0xb6, 0x01, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x78, 0x70, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x78, 0x70, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x33, 0x0a, 0x09, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x78, 0x63, 0x65, 0x6c, 0x5f, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x2e, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x52, 0x09, 0x6c,
	0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x22, 0x47, 0x0a, 0x08, 0x4c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x05, 0x74, 0x61, 0x73, 0x6b,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x65, 0x78, 0x63, 0x65, 0x6c, 0x5f,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x05, 0x74, 0x61, 0x73, 0x6b,
	0x73, 0x22, 0x3a, 0x0a, 0x04, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x78, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x78, 0x70, 0x22, 0x4a, 0x0a,
	0x05, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2b, 0x0a, 0x05,
	0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x78,
	0x63, 0x65, 0x6c, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x53,
	0x74, 0x72, 0x52, 0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x22, 0x4a, 0x0a, 0x08, 0x4d, 0x6f, 0x6e,
	0x74, 0x68, 0x53, 0x74, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x79, 0x65, 0x61, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x79, 0x65, 0x61, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x6e,
	0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x12,
	0x14, 0x0a, 0x05, 0x68, 0x6f, 0x75, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x68, 0x6f, 0x75, 0x72, 0x73, 0x32, 0x5b, 0x0a, 0x0a, 0x45, 0x78, 0x63, 0x65, 0x6c, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x12, 0x4d, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x43, 0x61, 0x64,
	0x65, 0x74, 0x73, 0x12, 0x1d, 0x2e, 0x65, 0x78, 0x63, 0x65, 0x6c, 0x5f, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x2e, 0x54, 0x6f, 0x70, 0x43, 0x61, 0x64, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x65, 0x78, 0x63, 0x65, 0x6c, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x2e, 0x54, 0x6f, 0x70, 0x43, 0x61, 0x64, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x42, 0x25, 0x5a, 0x23, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f,
	0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x2f, 0x70, 0x62, 0x2f, 0x65, 0x78,
	0x63, 0x65, 0x6c, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_excel_table_proto_rawDescOnce sync.Once
	file_excel_table_proto_rawDescData = file_excel_table_proto_rawDesc
)

func file_excel_table_proto_rawDescGZIP() []byte {
	file_excel_table_proto_rawDescOnce.Do(func() {
		file_excel_table_proto_rawDescData = protoimpl.X.CompressGZIP(file_excel_table_proto_rawDescData)
	})
	return file_excel_table_proto_rawDescData
}

var file_excel_table_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_excel_table_proto_goTypes = []interface{}{
	(*TopCadetsResponse)(nil),     // 0: excel_table.TopCadetsResponse
	(*TopCadetsRequest)(nil),      // 1: excel_table.TopCadetsRequest
	(*CadetData)(nil),             // 2: excel_table.CadetData
	(*Personal)(nil),              // 3: excel_table.Personal
	(*Admission)(nil),             // 4: excel_table.Admission
	(*EventList)(nil),             // 5: excel_table.EventList
	(*Event)(nil),                 // 6: excel_table.Event
	(*Language)(nil),              // 7: excel_table.Language
	(*Task)(nil),                  // 8: excel_table.Task
	(*Hours)(nil),                 // 9: excel_table.Hours
	(*MonthStr)(nil),              // 10: excel_table.MonthStr
	nil,                           // 11: excel_table.CadetData.JourneyEntry
	(*timestamppb.Timestamp)(nil), // 12: google.protobuf.Timestamp
}
var file_excel_table_proto_depIdxs = []int32{
	2,  // 0: excel_table.TopCadetsRequest.cadets:type_name -> excel_table.CadetData
	3,  // 1: excel_table.CadetData.personal:type_name -> excel_table.Personal
	9,  // 2: excel_table.CadetData.hours:type_name -> excel_table.Hours
	11, // 3: excel_table.CadetData.journey:type_name -> excel_table.CadetData.JourneyEntry
	4,  // 4: excel_table.Personal.admission:type_name -> excel_table.Admission
	6,  // 5: excel_table.EventList.events:type_name -> excel_table.Event
	12, // 6: excel_table.Event.created_at:type_name -> google.protobuf.Timestamp
	7,  // 7: excel_table.Event.languages:type_name -> excel_table.Language
	8,  // 8: excel_table.Language.tasks:type_name -> excel_table.Task
	10, // 9: excel_table.Hours.month:type_name -> excel_table.MonthStr
	5,  // 10: excel_table.CadetData.JourneyEntry.value:type_name -> excel_table.EventList
	1,  // 11: excel_table.ExcelTable.GetTopCadets:input_type -> excel_table.TopCadetsRequest
	0,  // 12: excel_table.ExcelTable.GetTopCadets:output_type -> excel_table.TopCadetsResponse
	12, // [12:13] is the sub-list for method output_type
	11, // [11:12] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_excel_table_proto_init() }
func file_excel_table_proto_init() {
	if File_excel_table_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_excel_table_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopCadetsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_excel_table_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopCadetsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_excel_table_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CadetData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_excel_table_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Personal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_excel_table_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Admission); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_excel_table_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_excel_table_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_excel_table_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Language); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_excel_table_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Task); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_excel_table_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Hours); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_excel_table_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MonthStr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_excel_table_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_excel_table_proto_goTypes,
		DependencyIndexes: file_excel_table_proto_depIdxs,
		MessageInfos:      file_excel_table_proto_msgTypes,
	}.Build()
	File_excel_table_proto = out.File
	file_excel_table_proto_rawDesc = nil
	file_excel_table_proto_goTypes = nil
	file_excel_table_proto_depIdxs = nil
}
